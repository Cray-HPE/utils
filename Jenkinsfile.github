@Library('csm-shared-library') _

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        NAME = "platform-utils"
        DESCRIPTION = "Health check scripts and utilities."
        IS_STABLE = getBuildIsStable()
        BUILD_METADATA = getRpmRevision(isStable: env.IS_STABLE)
    }

    stages {
        stage("Build") {
            steps {
                sh "make rpm"
            }
        }

        stage("Publish") {
            steps {
                script {
                    publishCsmRpms(
                        arch: "noarch",
                        component: env.NAME,
                        pattern: "dist/rpmbuild/RPMS/noarch/*.rpm",
                        os: 'sle-15sp2',
                        isStable: env.IS_STABLE
                    )
                    publishCsmRpms(
                        arch: "src",
                        component: env.NAME,
                        pattern: "dist/rpmbuild/SRPMS/*.rpm",
                        os: 'sle-15sp2',
                        isStable: env.IS_STABLE,
                    )
                    publishCsmRpms(
                        arch: "noarch",
                        component: env.NAME,
                        pattern: "dist/rpmbuild/RPMS/noarch/*.rpm",
                        os: 'sle-15sp4',
                        isStable: env.IS_STABLE
                    )
                    publishCsmRpms(
                        arch: "src",
                        component: env.NAME,
                        pattern: "dist/rpmbuild/SRPMS/*.rpm",
                        os: 'sle-15sp4',
                        isStable: env.IS_STABLE,
                    )
                    publishCsmRpms(
                        arch: "noarch",
                        component: env.NAME,
                        pattern: "dist/rpmbuild/RPMS/noarch/*.rpm",
                        os: 'noos',
                        isStable: env.IS_STABLE
                    )
                    publishCsmRpms(
                        arch: "src",
                        component: env.NAME,
                        pattern: "dist/rpmbuild/SRPMS/*.rpm",
                        os: 'noos',
                        isStable: env.IS_STABLE,
                    )
                }
            }
        }
    }
}
